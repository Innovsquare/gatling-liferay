import io.gatling.core.Predef._
import io.gatling.http.Predef._
import scala.concurrent.duration._

/**
 * Gatling 2.0RC4 Script generated for Liferay by the plugin
 * "Load Test with Gatling"
 */
 
 {{#initiate}} {{/initiate}}

class {{simuName}} extends Simulation {
{{#mustacheScenario}}
/**
 * List of the differents requests for {{scenarioName}} that are stressing their inner portlets
 */   
{{#mustacheRequests}}{{^regular}}
  object {{scenarioName}}{{requestName}} {
{{#mustachePortlet}}{{#recorderGet}}
    val {{name}} = 
{{#listGet}}
      {{^-first}}.{{/-first}}exec( http("{{nameN}}").{{typeRequest}}("{{url}}"))
      .pause(2)
{{/listGet}}{{/recorderGet}}

{{#messageBoardSimple}}
    val {{nameN}} = exec(http("{{nameN}}")
                          .get("{{url}}")
                          .check(regex("""cell first"> <a href="([^"]+)">""").find(0).saveAs("messageBoardSimpleurl")))
                        .pause(1)
                        .exec(http("Select")
                          .get("${messageBoardSimpleurl}")
                          .check(status.is(200)))
                        .pause(1)
{{/messageBoardSimple}}

{{#assetPublisherSimple}}
	val {{nameN}} = exec(http("{{nameN}}")
                          .get("{{url}}")
                          .check(regex("""class="asset-title"> <a href="([^"]+)">""").find(0).saveAs("assetPublisherSimpleurl")))
                        .pause(1)
                        .exec(http("Select")
                          .get("${assetPublisherSimpleurl}")
                          .check(status.is(200)))
                        .pause(1)
{{/assetPublisherSimple}}

{{#wikiDisplaySimple}}  
    val {{name}} = exec(http("{{name}}")
                          .get("{{url}}"))
                        .pause(1)
                        .exec(http("Recent Changes")
                          .get("http://localhost:8080/web/ste3/wiki2?p_p_id={{plid}}&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id={{column}}&p_p_col_count=1&_{{plid}}_nodeName=Main&_{{plid}}_struts_action=%2Fwiki_display%2Fview_recent_changes")
                          .check(status.is(200)))
                        .exec(http("View All Pages")
                          .get("http://localhost:8080/web/ste3/wiki2?p_p_id={{plid}}&p_p_lifecycle=0&p_p_state=normal&p_p_mode=view&p_p_col_id={{column}}&p_p_col_count=1&_{{plid}}_nodeName=Main&_{{plid}}_struts_action=%2Fwiki_display%2Fview_all_pages")
                          .check(status.is(200)))
                        .pause(1)
{{/wikiDisplaySimple}}

    /* script for {{name}} */
    
    val {{name}} = randomSwitch(
{{#scripts}}
      {{pourcentage}} -> exec({{nameVariable}}){{^-last}},{{/-last}}
{{/scripts}}
    )

{{/mustachePortlet}}
    val Entrance = exec( http("{{requestName}}").get("{{url}}") ) 
      .pause(1)
      .randomSwitch(  /*list of the portlets with their weight*/
{{#mustachePortlet}}
         {{pourcentage}} -> exec({{name}}){{^-last}},{{/-last}}         
{{/mustachePortlet}}
      )
  }
{{/regular}}  {{/mustacheRequests}}{{/mustacheScenario}}
  
/**
 * List of the differents scenarios
 */  
{{#mustacheScenario}}
  val {{scenarioName}} = scenario("{{scenarioName}}")
    .randomSwitch(
{{#mustacheRequests}}
      {{pourcentage}} -> exec({{^notRegular}}http("{{scenarioName}}{{requestName}}").get("{{url}}"){{/notRegular}}{{^regular}}{{scenarioName}}{{requestName}}.Entrance{{/regular}}){{^last}},{{/last}}
{{/mustacheRequests}} 
  )
{{/mustacheScenario}}
  
    
  setUp(
{{#mustacheScenario}}
    {{scenarioName}}.inject( rampUsers({{users}}) over( {{duration}} seconds)){{^-last}},{{/-last}}
{{/mustacheScenario}}
  )
  
  
}
