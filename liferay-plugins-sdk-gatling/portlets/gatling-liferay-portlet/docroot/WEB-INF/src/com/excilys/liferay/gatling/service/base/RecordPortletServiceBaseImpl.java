/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.excilys.liferay.gatling.service.base;

import com.excilys.liferay.gatling.model.RecordPortlet;
import com.excilys.liferay.gatling.service.RecordPortletService;
import com.excilys.liferay.gatling.service.persistence.LinkUsecaseRequestPersistence;
import com.excilys.liferay.gatling.service.persistence.RecordPortletPersistence;
import com.excilys.liferay.gatling.service.persistence.RequestPersistence;
import com.excilys.liferay.gatling.service.persistence.ScenarioPersistence;
import com.excilys.liferay.gatling.service.persistence.SimulationPersistence;
import com.excilys.liferay.gatling.service.persistence.UrlUsecasePersistence;
import com.excilys.liferay.gatling.service.persistence.UsecasePersistence;

import com.liferay.portal.kernel.bean.BeanReference;
import com.liferay.portal.kernel.bean.IdentifiableBean;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdate;
import com.liferay.portal.kernel.dao.jdbc.SqlUpdateFactoryUtil;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.service.BaseServiceImpl;
import com.liferay.portal.service.persistence.UserPersistence;

import javax.sql.DataSource;

/**
 * Provides the base implementation for the record portlet remote service.
 *
 * <p>
 * This implementation exists only as a container for the default service methods generated by ServiceBuilder. All custom service methods should be put in {@link com.excilys.liferay.gatling.service.impl.RecordPortletServiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see com.excilys.liferay.gatling.service.impl.RecordPortletServiceImpl
 * @see com.excilys.liferay.gatling.service.RecordPortletServiceUtil
 * @generated
 */
public abstract class RecordPortletServiceBaseImpl extends BaseServiceImpl
	implements RecordPortletService, IdentifiableBean {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. Always use {@link com.excilys.liferay.gatling.service.RecordPortletServiceUtil} to access the record portlet remote service.
	 */

	/**
	 * Returns the link usecase request local service.
	 *
	 * @return the link usecase request local service
	 */
	public com.excilys.liferay.gatling.service.LinkUsecaseRequestLocalService getLinkUsecaseRequestLocalService() {
		return linkUsecaseRequestLocalService;
	}

	/**
	 * Sets the link usecase request local service.
	 *
	 * @param linkUsecaseRequestLocalService the link usecase request local service
	 */
	public void setLinkUsecaseRequestLocalService(
		com.excilys.liferay.gatling.service.LinkUsecaseRequestLocalService linkUsecaseRequestLocalService) {
		this.linkUsecaseRequestLocalService = linkUsecaseRequestLocalService;
	}

	/**
	 * Returns the link usecase request persistence.
	 *
	 * @return the link usecase request persistence
	 */
	public LinkUsecaseRequestPersistence getLinkUsecaseRequestPersistence() {
		return linkUsecaseRequestPersistence;
	}

	/**
	 * Sets the link usecase request persistence.
	 *
	 * @param linkUsecaseRequestPersistence the link usecase request persistence
	 */
	public void setLinkUsecaseRequestPersistence(
		LinkUsecaseRequestPersistence linkUsecaseRequestPersistence) {
		this.linkUsecaseRequestPersistence = linkUsecaseRequestPersistence;
	}

	/**
	 * Returns the record portlet remote service.
	 *
	 * @return the record portlet remote service
	 */
	public com.excilys.liferay.gatling.service.RecordPortletService getRecordPortletService() {
		return recordPortletService;
	}

	/**
	 * Sets the record portlet remote service.
	 *
	 * @param recordPortletService the record portlet remote service
	 */
	public void setRecordPortletService(
		com.excilys.liferay.gatling.service.RecordPortletService recordPortletService) {
		this.recordPortletService = recordPortletService;
	}

	/**
	 * Returns the record portlet persistence.
	 *
	 * @return the record portlet persistence
	 */
	public RecordPortletPersistence getRecordPortletPersistence() {
		return recordPortletPersistence;
	}

	/**
	 * Sets the record portlet persistence.
	 *
	 * @param recordPortletPersistence the record portlet persistence
	 */
	public void setRecordPortletPersistence(
		RecordPortletPersistence recordPortletPersistence) {
		this.recordPortletPersistence = recordPortletPersistence;
	}

	/**
	 * Returns the request local service.
	 *
	 * @return the request local service
	 */
	public com.excilys.liferay.gatling.service.RequestLocalService getRequestLocalService() {
		return requestLocalService;
	}

	/**
	 * Sets the request local service.
	 *
	 * @param requestLocalService the request local service
	 */
	public void setRequestLocalService(
		com.excilys.liferay.gatling.service.RequestLocalService requestLocalService) {
		this.requestLocalService = requestLocalService;
	}

	/**
	 * Returns the request persistence.
	 *
	 * @return the request persistence
	 */
	public RequestPersistence getRequestPersistence() {
		return requestPersistence;
	}

	/**
	 * Sets the request persistence.
	 *
	 * @param requestPersistence the request persistence
	 */
	public void setRequestPersistence(RequestPersistence requestPersistence) {
		this.requestPersistence = requestPersistence;
	}

	/**
	 * Returns the scenario local service.
	 *
	 * @return the scenario local service
	 */
	public com.excilys.liferay.gatling.service.ScenarioLocalService getScenarioLocalService() {
		return scenarioLocalService;
	}

	/**
	 * Sets the scenario local service.
	 *
	 * @param scenarioLocalService the scenario local service
	 */
	public void setScenarioLocalService(
		com.excilys.liferay.gatling.service.ScenarioLocalService scenarioLocalService) {
		this.scenarioLocalService = scenarioLocalService;
	}

	/**
	 * Returns the scenario persistence.
	 *
	 * @return the scenario persistence
	 */
	public ScenarioPersistence getScenarioPersistence() {
		return scenarioPersistence;
	}

	/**
	 * Sets the scenario persistence.
	 *
	 * @param scenarioPersistence the scenario persistence
	 */
	public void setScenarioPersistence(ScenarioPersistence scenarioPersistence) {
		this.scenarioPersistence = scenarioPersistence;
	}

	/**
	 * Returns the simulation local service.
	 *
	 * @return the simulation local service
	 */
	public com.excilys.liferay.gatling.service.SimulationLocalService getSimulationLocalService() {
		return simulationLocalService;
	}

	/**
	 * Sets the simulation local service.
	 *
	 * @param simulationLocalService the simulation local service
	 */
	public void setSimulationLocalService(
		com.excilys.liferay.gatling.service.SimulationLocalService simulationLocalService) {
		this.simulationLocalService = simulationLocalService;
	}

	/**
	 * Returns the simulation persistence.
	 *
	 * @return the simulation persistence
	 */
	public SimulationPersistence getSimulationPersistence() {
		return simulationPersistence;
	}

	/**
	 * Sets the simulation persistence.
	 *
	 * @param simulationPersistence the simulation persistence
	 */
	public void setSimulationPersistence(
		SimulationPersistence simulationPersistence) {
		this.simulationPersistence = simulationPersistence;
	}

	/**
	 * Returns the url usecase local service.
	 *
	 * @return the url usecase local service
	 */
	public com.excilys.liferay.gatling.service.UrlUsecaseLocalService getUrlUsecaseLocalService() {
		return urlUsecaseLocalService;
	}

	/**
	 * Sets the url usecase local service.
	 *
	 * @param urlUsecaseLocalService the url usecase local service
	 */
	public void setUrlUsecaseLocalService(
		com.excilys.liferay.gatling.service.UrlUsecaseLocalService urlUsecaseLocalService) {
		this.urlUsecaseLocalService = urlUsecaseLocalService;
	}

	/**
	 * Returns the url usecase persistence.
	 *
	 * @return the url usecase persistence
	 */
	public UrlUsecasePersistence getUrlUsecasePersistence() {
		return urlUsecasePersistence;
	}

	/**
	 * Sets the url usecase persistence.
	 *
	 * @param urlUsecasePersistence the url usecase persistence
	 */
	public void setUrlUsecasePersistence(
		UrlUsecasePersistence urlUsecasePersistence) {
		this.urlUsecasePersistence = urlUsecasePersistence;
	}

	/**
	 * Returns the usecase local service.
	 *
	 * @return the usecase local service
	 */
	public com.excilys.liferay.gatling.service.UsecaseLocalService getUsecaseLocalService() {
		return usecaseLocalService;
	}

	/**
	 * Sets the usecase local service.
	 *
	 * @param usecaseLocalService the usecase local service
	 */
	public void setUsecaseLocalService(
		com.excilys.liferay.gatling.service.UsecaseLocalService usecaseLocalService) {
		this.usecaseLocalService = usecaseLocalService;
	}

	/**
	 * Returns the usecase persistence.
	 *
	 * @return the usecase persistence
	 */
	public UsecasePersistence getUsecasePersistence() {
		return usecasePersistence;
	}

	/**
	 * Sets the usecase persistence.
	 *
	 * @param usecasePersistence the usecase persistence
	 */
	public void setUsecasePersistence(UsecasePersistence usecasePersistence) {
		this.usecasePersistence = usecasePersistence;
	}

	/**
	 * Returns the counter local service.
	 *
	 * @return the counter local service
	 */
	public com.liferay.counter.service.CounterLocalService getCounterLocalService() {
		return counterLocalService;
	}

	/**
	 * Sets the counter local service.
	 *
	 * @param counterLocalService the counter local service
	 */
	public void setCounterLocalService(
		com.liferay.counter.service.CounterLocalService counterLocalService) {
		this.counterLocalService = counterLocalService;
	}

	/**
	 * Returns the resource local service.
	 *
	 * @return the resource local service
	 */
	public com.liferay.portal.service.ResourceLocalService getResourceLocalService() {
		return resourceLocalService;
	}

	/**
	 * Sets the resource local service.
	 *
	 * @param resourceLocalService the resource local service
	 */
	public void setResourceLocalService(
		com.liferay.portal.service.ResourceLocalService resourceLocalService) {
		this.resourceLocalService = resourceLocalService;
	}

	/**
	 * Returns the user local service.
	 *
	 * @return the user local service
	 */
	public com.liferay.portal.service.UserLocalService getUserLocalService() {
		return userLocalService;
	}

	/**
	 * Sets the user local service.
	 *
	 * @param userLocalService the user local service
	 */
	public void setUserLocalService(
		com.liferay.portal.service.UserLocalService userLocalService) {
		this.userLocalService = userLocalService;
	}

	/**
	 * Returns the user remote service.
	 *
	 * @return the user remote service
	 */
	public com.liferay.portal.service.UserService getUserService() {
		return userService;
	}

	/**
	 * Sets the user remote service.
	 *
	 * @param userService the user remote service
	 */
	public void setUserService(
		com.liferay.portal.service.UserService userService) {
		this.userService = userService;
	}

	/**
	 * Returns the user persistence.
	 *
	 * @return the user persistence
	 */
	public UserPersistence getUserPersistence() {
		return userPersistence;
	}

	/**
	 * Sets the user persistence.
	 *
	 * @param userPersistence the user persistence
	 */
	public void setUserPersistence(UserPersistence userPersistence) {
		this.userPersistence = userPersistence;
	}

	public void afterPropertiesSet() {
		Class<?> clazz = getClass();

		_classLoader = clazz.getClassLoader();
	}

	public void destroy() {
	}

	/**
	 * Returns the Spring bean ID for this bean.
	 *
	 * @return the Spring bean ID for this bean
	 */
	@Override
	public String getBeanIdentifier() {
		return _beanIdentifier;
	}

	/**
	 * Sets the Spring bean ID for this bean.
	 *
	 * @param beanIdentifier the Spring bean ID for this bean
	 */
	@Override
	public void setBeanIdentifier(String beanIdentifier) {
		_beanIdentifier = beanIdentifier;
	}

	@Override
	public Object invokeMethod(String name, String[] parameterTypes,
		Object[] arguments) throws Throwable {
		Thread currentThread = Thread.currentThread();

		ClassLoader contextClassLoader = currentThread.getContextClassLoader();

		if (contextClassLoader != _classLoader) {
			currentThread.setContextClassLoader(_classLoader);
		}

		try {
			return _clpInvoker.invokeMethod(name, parameterTypes, arguments);
		}
		finally {
			if (contextClassLoader != _classLoader) {
				currentThread.setContextClassLoader(contextClassLoader);
			}
		}
	}

	protected Class<?> getModelClass() {
		return RecordPortlet.class;
	}

	protected String getModelClassName() {
		return RecordPortlet.class.getName();
	}

	/**
	 * Performs an SQL query.
	 *
	 * @param sql the sql query
	 */
	protected void runSQL(String sql) throws SystemException {
		try {
			DataSource dataSource = recordPortletPersistence.getDataSource();

			SqlUpdate sqlUpdate = SqlUpdateFactoryUtil.getSqlUpdate(dataSource,
					sql, new int[0]);

			sqlUpdate.update();
		}
		catch (Exception e) {
			throw new SystemException(e);
		}
	}

	@BeanReference(type = com.excilys.liferay.gatling.service.LinkUsecaseRequestLocalService.class)
	protected com.excilys.liferay.gatling.service.LinkUsecaseRequestLocalService linkUsecaseRequestLocalService;
	@BeanReference(type = LinkUsecaseRequestPersistence.class)
	protected LinkUsecaseRequestPersistence linkUsecaseRequestPersistence;
	@BeanReference(type = com.excilys.liferay.gatling.service.RecordPortletService.class)
	protected com.excilys.liferay.gatling.service.RecordPortletService recordPortletService;
	@BeanReference(type = RecordPortletPersistence.class)
	protected RecordPortletPersistence recordPortletPersistence;
	@BeanReference(type = com.excilys.liferay.gatling.service.RequestLocalService.class)
	protected com.excilys.liferay.gatling.service.RequestLocalService requestLocalService;
	@BeanReference(type = RequestPersistence.class)
	protected RequestPersistence requestPersistence;
	@BeanReference(type = com.excilys.liferay.gatling.service.ScenarioLocalService.class)
	protected com.excilys.liferay.gatling.service.ScenarioLocalService scenarioLocalService;
	@BeanReference(type = ScenarioPersistence.class)
	protected ScenarioPersistence scenarioPersistence;
	@BeanReference(type = com.excilys.liferay.gatling.service.SimulationLocalService.class)
	protected com.excilys.liferay.gatling.service.SimulationLocalService simulationLocalService;
	@BeanReference(type = SimulationPersistence.class)
	protected SimulationPersistence simulationPersistence;
	@BeanReference(type = com.excilys.liferay.gatling.service.UrlUsecaseLocalService.class)
	protected com.excilys.liferay.gatling.service.UrlUsecaseLocalService urlUsecaseLocalService;
	@BeanReference(type = UrlUsecasePersistence.class)
	protected UrlUsecasePersistence urlUsecasePersistence;
	@BeanReference(type = com.excilys.liferay.gatling.service.UsecaseLocalService.class)
	protected com.excilys.liferay.gatling.service.UsecaseLocalService usecaseLocalService;
	@BeanReference(type = UsecasePersistence.class)
	protected UsecasePersistence usecasePersistence;
	@BeanReference(type = com.liferay.counter.service.CounterLocalService.class)
	protected com.liferay.counter.service.CounterLocalService counterLocalService;
	@BeanReference(type = com.liferay.portal.service.ResourceLocalService.class)
	protected com.liferay.portal.service.ResourceLocalService resourceLocalService;
	@BeanReference(type = com.liferay.portal.service.UserLocalService.class)
	protected com.liferay.portal.service.UserLocalService userLocalService;
	@BeanReference(type = com.liferay.portal.service.UserService.class)
	protected com.liferay.portal.service.UserService userService;
	@BeanReference(type = UserPersistence.class)
	protected UserPersistence userPersistence;
	private String _beanIdentifier;
	private ClassLoader _classLoader;
	private RecordPortletServiceClpInvoker _clpInvoker = new RecordPortletServiceClpInvoker();
}