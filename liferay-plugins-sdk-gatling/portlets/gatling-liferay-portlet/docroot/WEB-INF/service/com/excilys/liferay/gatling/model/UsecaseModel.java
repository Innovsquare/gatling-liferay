/**
 * Copyright (c) 2000-2013 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.excilys.liferay.gatling.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the Usecase service. Represents a row in the &quot;StressTool_Usecase&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.excilys.liferay.gatling.model.impl.UsecaseModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.excilys.liferay.gatling.model.impl.UsecaseImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Usecase
 * @see com.excilys.liferay.gatling.model.impl.UsecaseImpl
 * @see com.excilys.liferay.gatling.model.impl.UsecaseModelImpl
 * @generated
 */
public interface UsecaseModel extends BaseModel<Usecase> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a usecase model instance should use the {@link Usecase} interface instead.
	 */

	/**
	 * Returns the primary key of this usecase.
	 *
	 * @return the primary key of this usecase
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this usecase.
	 *
	 * @param primaryKey the primary key of this usecase
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the usecase ID of this usecase.
	 *
	 * @return the usecase ID of this usecase
	 */
	public long getUsecaseId();

	/**
	 * Sets the usecase ID of this usecase.
	 *
	 * @param usecaseId the usecase ID of this usecase
	 */
	public void setUsecaseId(long usecaseId);

	/**
	 * Returns the portlet ID of this usecase.
	 *
	 * @return the portlet ID of this usecase
	 */
	public long getPortletId();

	/**
	 * Sets the portlet ID of this usecase.
	 *
	 * @param portletId the portlet ID of this usecase
	 */
	public void setPortletId(long portletId);

	/**
	 * Returns the version portlet of this usecase.
	 *
	 * @return the version portlet of this usecase
	 */
	public long getVersionPortlet();

	/**
	 * Sets the version portlet of this usecase.
	 *
	 * @param versionPortlet the version portlet of this usecase
	 */
	public void setVersionPortlet(long versionPortlet);

	/**
	 * Returns the name of this usecase.
	 *
	 * @return the name of this usecase
	 */
	@AutoEscape
	public String getName();

	/**
	 * Sets the name of this usecase.
	 *
	 * @param name the name of this usecase
	 */
	public void setName(String name);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Usecase usecase);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Usecase> toCacheModel();

	@Override
	public Usecase toEscapedModel();

	@Override
	public Usecase toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}