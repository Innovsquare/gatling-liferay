package com.ebusiness.liferay.simulations

import com.ebusiness.liferay.scenarios.{GetPage, Login, Logout}
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import scala.concurrent.duration._

{{#initiate}} {{/initiate}}

/**
 * Gatling 2.2.X Script generated for Liferay by the plugin
 * "Load Test with Gatling"
 */
class {{simuName}} extends Simulation {

	val httpProtocol = http
		.acceptHeader("""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""")
		.acceptEncodingHeader("""gzip, deflate""")
		.acceptLanguageHeader("""fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3""")
		.disableWarmUp
 	
	/**
 	 * List of the differents scenarios
 	 */
	{{#mustacheScenario}}
	val {{scenarioName}} = scenario("{{scenarioName}}")
	  .exec(
	  	Login.successfulLogin("{{loginPageURL}}", "feeders/login.csv"),
		GetPage.randomPage("feeders/siteMapPage.csv"),
        Logout.scenario("{{logoutPageURL}}")
      )
	{{/mustacheScenario}}


 	 setUp(
		{{#mustacheScenario}}
   		{{scenarioName}}.inject(rampUsers({{users}}) over({{duration}} seconds))
		{{/mustacheScenario}}
  	).protocols(httpProtocol)

}
