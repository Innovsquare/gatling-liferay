package liferay

import liferay.actions._
import io.gatling.core.Predef._
import io.gatling.http.Predef._
import scala.concurrent.duration._

/**
 * Gatling 2.2.X Script generated for Liferay by the plugin
 * "Load Test with Gatling"
 */
class {{simulationName}} extends Simulation {

  val httpProtocol = http
    .acceptHeader("""text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8""")
    .acceptEncodingHeader("""gzip, deflate""")
    .acceptLanguageHeader("""fr,fr-fr;q=0.8,en-us;q=0.5,en;q=0.3""")
    .disableWarmUp

  /**
   * List of the differents scenarios
   */
  {{#mustacheScenarios}}
  val {{scenarioName}} = scenario("{{scenarioName}}")
    .exec(
      Login.successfulLogin("{{loginPageURL}}", "feeders/login.csv"),
      GetPage.randomPage("feeders/siteMapPage.csv"),
      Logout.logout("{{logoutPageURL}}")
    )
  {{/mustacheScenarios}}


  setUp(
    {{#mustacheScenarios}}
    {{scenarioName}}.inject(rampUsers({{users}}) over({{rampUp}} seconds))
    {{/mustacheScenarios}}
  ).protocols(httpProtocol)

}
